plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

test {
    useJUnitPlatform()
    if (System.getProperty("excludeTags")) {
        useJUnitPlatform {
            excludeTags System.getProperty("excludeTags")
        }
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
    // Q클래스 등 자동 생성 코드 제외
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            '**/Q*.class',                        // QueryDSL Q클래스
                            '**/generated/**',                   // generated 경로
                    ])
                })
        )
    }
}

group = 'com.codeit'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //lombok - test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // postgreSQL, H2 Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JPA Json 타입 매핑용
    implementation 'com.vladmihalcea:hibernate-types-60:2.20.0'
}


tasks.named('test') {
    useJUnitPlatform()
}
